// Generated by CoffeeScript 1.8.0
$(function() {
  var b, c, n;
  n = 30000;
  b = 3;
  c = 2;
  config.define({
    title: 'Количество случайных чисел:',
    "default": n,
    valid: function(v) {
      return n > 1;
    },
    change: function(v) {
      return n = v;
    }
  });
  config.define({
    title: 'Параметр b',
    "default": b,
    valid: function(v_) {
      return v_ > 0;
    },
    change: function(v_) {
      return b = v_;
    }
  });
  config.define({
    title: 'Параметр c',
    "default": c,
    valid: function(v_) {
      return v_ > 0;
    },
    change: function(v_) {
      return c = v_;
    }
  });
  $('#apply-config').button().click(function() {
    var buckets, countFilter_, data, density, densityStep, deviation, expectation, inrange, intervalSize, intervals, mark, max, min, plot, plotPlaceholder, variance, weibull, weibullDensity;
    weibull = function(uniform) {
      return b * Math.pow(-(log(uniform)), 1 / c);
    };
    weibullDensity = function(x) {
      return (c / b) * Math.pow(x / b, c - 1) * exp(-(Math.pow(x / b, c)));
    };
    data = map(weibull, ncalls(Math.random, n));
    min = minimum(data);
    max = maximum(data);
    expectation = (sum(data)) / (len(data));
    variance = (sum(map_(data, function(x) {
      return Math.pow(x - expectation, 2);
    }))) / (len(data));
    deviation = Math.sqrt(variance);
    intervals = 1 + (Math.floor(.5 + (log2(n))));
    intervalSize = (max - min) / intervals;
    inrange = function(s, e) {
      return function(x) {
        return s < x && x <= e;
      };
    };
    countFilter_ = compose(len, filter_);
    buckets = map_(frange(min, max, intervalSize), function(s) {
      return [s, countFilter_(data, inrange(s, s + intervalSize))];
    });
    densityStep = intervalSize / 10;
    density = map_(frange(min, max, densityStep), function(x) {
      return [x, weibullDensity(x)];
    });
    plotPlaceholder = $("#plot");
    plot = $.plot(plotPlaceholder, [
      {
        data: buckets,
        bars: {
          show: true,
          barWidth: intervalSize
        },
        yaxis: 1
      }, {
        data: density,
        yaxis: 2
      }
    ], {
      yaxes: [{}, {}]
    });
    mark = function(label, x, y) {
      var ctx, o;
      o = plot.pointOffset({
        x: x,
        y: y
      });
      plotPlaceholder.append("<div style=' position: absolute; left: " + (o.left + 6) + "px; top: " + (o.top + 16) + "px' > " + label + " </div>");
      ctx = plot.getCanvas().getContext("2d");
      ctx.beginPath();
      o.left += 4;
      ctx.moveTo(o.left - 1, o.top - 5);
      ctx.lineTo(o.left - 1, o.top + 5);
      ctx.lineTo(o.left + 1, o.top + 5);
      ctx.lineTo(o.left + 1, o.top - 5);
      ctx.fillStyle = "#000";
      return ctx.fill();
    };
    mark('min', min, 0);
    mark('max', max, 0);
    mark('M(x)', expectation, 0);
    mark('M(x) - σ(x)', expectation - deviation, 0);
    return mark('M(x) + σ(x)', expectation + deviation, 0);
  });
  return $('#apply-config').click();
});

//# sourceMappingURL=main.js.map
