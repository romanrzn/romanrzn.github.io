// Generated by CoffeeScript 1.8.0
$(function() {
  var binStrValidator, decode, encode, g, k, msg, n, _ref;
  _ref = [7, 4, 0xb, 0x6], n = _ref[0], k = _ref[1], g = _ref[2], msg = _ref[3];
  config.define({
    title: 'n',
    "default": n,
    valid: function(v) {
      return v > 1 && v > k;
    },
    change: function(v) {
      return n = v;
    }
  });
  config.define({
    title: 'k',
    "default": k,
    valid: function(v) {
      return v > 1 && n > v;
    },
    change: function(v) {
      return k = v;
    }
  });
  binStrValidator = function(len) {
    return function(_, v) {
      return (v.length > 0) && (v.length <= len) && (v.split('').every(function(c) {
        return c === '0' || c === '1';
      }));
    };
  };
  config.define({
    title: 'Образующий полином',
    "default": sprintf("%0" + k + "b", g),
    valid: function() {
      return (binStrValidator(k)).apply(null, arguments);
    },
    change: function(_, v) {
      return g = parseInt(v, 2);
    }
  });
  config.define({
    title: 'Информационная последовательность',
    "default": sprintf("%0" + k + "b", msg),
    valid: function() {
      return (binStrValidator(k)).apply(null, arguments);
    },
    change: function(_, v) {
      return msg = parseInt(v, 2);
    }
  });
  encode = function(msg) {
    var code;
    code = msg << binaryField.degree(g);
    code = code ^ binaryField.mod(code, g);
    return code;
  };
  decode = function(code) {
    var decoded, mod;
    mod = binaryField.mod(code, g);
    if (mod) {
      throw new Error('mod /= 0');
    }
    decoded = code >> binaryField.degree(g);
    return decoded;
  };
  $('#result-code').spinner({
    spin: function() {
      return false;
    }
  });
  $('#result-code').css('margin-right', '.4em');
  $('#result-code').parent().children('.ui-spinner-button').remove();
  $('#apply-config').button().click(function() {
    $('#encoded').text(sprintf("%0" + n + "b", encode(msg)));
    return $('#decoded').text(sprintf("%0" + k + "b", decode(encode(msg))));
  });
  return $('#apply-config').click();
});

//# sourceMappingURL=main.js.map
