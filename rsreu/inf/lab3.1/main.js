// Generated by CoffeeScript 1.8.0
var errorsToNoErrorIntervals, noErrorIntervalsToErrors,
  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

noErrorIntervalsToErrors = function(intervals) {
  return concatMap_(intervals, function(n) {
    return (replicate(n, 0)).concat([1]);
  });
};

errorsToNoErrorIntervals = function(errors) {
  return concatMap_(group(errors), function(chunk) {
    if (chunk[0]) {
      return replicate(len(chunk) - 1, 0);
    } else {
      return [len(chunk)];
    }
  });
};

$(function() {
  var m, n, p, selector, _i, _len, _ref;
  p = 1.1 * Math.pow(10, -4);
  m = 24;
  n = 3 * Math.pow(10, 5);
  config.define({
    title: 'p',
    "default": p,
    valid: function(v) {
      return v > 0 && v < 1;
    },
    change: function(v) {
      return p = v;
    },
    $: {
      min: Math.pow(10, -5),
      max: 1 - Math.pow(10, -5),
      step: Math.pow(10, -5)
    }
  });
  config.define({
    title: 'Длина последовательности N',
    "default": n,
    valid: function(v) {
      return v > 1;
    },
    change: function(v) {
      return n = v;
    }
  });
  config.define({
    title: 'Длина блока m',
    "default": m,
    valid: function(v) {
      return v > 0;
    },
    change: function(v) {
      return m = v;
    }
  });
  _ref = ['#error-intervals', '#block-intervals'];
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    selector = _ref[_i];
    $(selector).spinner({
      spin: function() {
        return false;
      }
    });
    $(selector).css('margin-right', '.4em');
    $(selector).parent().children('.ui-spinner-button').remove();
  }
  $('#apply-config').button().click(function() {
    var blocks, errBlocksCount, errors, genNoerrorIntervalLength, i, interval, noerrorBlockIntervals, noerrorIntervals;
    genNoerrorIntervalLength = function() {
      return Math.round(log(Math.random(), 1 - p));
    };
    noerrorIntervals = [];
    i = 0;
    while (i < n) {
      noerrorIntervals.push(interval = genNoerrorIntervalLength());
      i += interval + 1;
    }
    errors = noErrorIntervalsToErrors(noerrorIntervals);
    blocks = splitEvery(m, errors);
    $('#error-intervals').val(noerrorIntervals.join(','));
    $('#error-coeff').text(sprintf('%.4f', len(noerrorIntervals) / n));
    errBlocksCount = len(filter_(blocks, function(b) {
      return __indexOf.call(b, 1) >= 0;
    }));
    $('#grouping-coeff').text(sprintf('%.4f', ((log(len(noerrorIntervals))) - (log(errBlocksCount))) / (log(m))));
    $('#block-error-coeff').text(sprintf('%.4f', errBlocksCount / (len(blocks))));
    noerrorBlockIntervals = errorsToNoErrorIntervals(map_(blocks, function(b) {
      return 0 + (__indexOf.call(b, 1) >= 0);
    }));
    return $('#block-intervals').val(noerrorBlockIntervals.join(','));
  });
  return $('#apply-config').click();
});

//# sourceMappingURL=main.js.map
