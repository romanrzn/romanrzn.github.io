// Generated by CoffeeScript 1.8.0
var config;

config = null;

$(function() {
  return config = new ((function() {
    var container, onvalues;

    function _Class() {}

    container = $('#config');

    onvalues = function(f) {
      return function(e) {
        return f.call(this, $(e.currentTarget).spinner("value"), $(e.currentTarget).val(), e);
      };
    };

    _Class.prototype.define = function(descr) {
      var node, row, title;
      if (descr.$ == null) {
        descr.$ = {};
      }
      if (!descr.type) {
        descr.type = (function() {
          if (descr["default"]) {
            switch (typeof descr["default"]) {
              case 'string':
                if (-1 !== descr["default"].indexOf('\n')) {
                  return 'textarea';
                }
                return 'input';
              case 'number':
                if (!descr.$.step) {
                  if (descr["default"] % 1 !== 0) {
                    descr.$.step = 0.01;
                  }
                }
                return 'spinner';
            }
          }
        })();
      }
      if (!descr.valid) {
        descr.valid = (function() {
          return true;
        });
      }
      if (descr.change) {
        descr.$.change = function(e) {
          var err;
          try {
            if ((onvalues(descr.valid))(e)) {
              (onvalues(descr.change))(e);
              return $(e.currentTarget).css('background', 'transparent');
            } else {
              throw (onvalues(function() {
                return arguments;
              }))(e);
            }
          } catch (_error) {
            err = _error;
            $(e.currentTarget).css('background', 'orangered');
            $(e.currentTarget).focus();
            return console.log('validation error:', err);
          }
        };
      }
      row = $('<div>');
      container.append(row);
      title = $('<span>');
      title.html(descr.title + ':');
      title.css('margin-right', '1em');
      row.append(title);
      switch (descr.type) {
        case 'textarea':
          node = $("<textarea>");
          row.append(node);
          descr.$.spin = function() {
            return false;
          };
          node.spinner(descr.$);
          node.css('margin-right', '.4em');
          node.parent().children('.ui-spinner-button').remove();
          break;
        case 'input':
          node = $("<input>");
          row.append(node);
          descr.$.spin = function() {
            return false;
          };
          node.spinner(descr.$);
          node.css('margin-right', '.4em');
          node.parent().children('.ui-spinner-button').remove();
          break;
        case 'spinner':
          node = $("<input>");
          row.append(node);
          node.spinner(descr.$);
      }
      node.val(descr["default"]);
      return node;
    };

    return _Class;

  })());
});

//# sourceMappingURL=config.js.map
